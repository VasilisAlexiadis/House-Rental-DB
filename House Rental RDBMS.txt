-- CONSTRAINTS

--PRIMARY KEYS


ALTER TABLE owner		-- table eowner pk
ADD CONSTRAINT pk_1owner
PRIMARY KEY (tin);

ALTER TABLE apartment		-- table apartment pk
ADD CONSTRAINT pk_1apartment
PRIMARY KEY (apa_id);

ALTER TABLE tenant		-- table tenant pk
ADD CONSTRAINT pk_1tenant
PRIMARY KEY (t_id);

ALTER TABLE rental		-- table rental pk
ADD CONSTRAINT pk_1rental
PRIMARY KEY (rental_id);

ALTER TABLE review		-- table review pk
ADD CONSTRAINT pk_1review
PRIMARY KEY (review_id);

--FOREIGN KEYS


ALTER TABLE apartment
ADD CONSTRAINT fk_1apartment_owner
FOREIGN KEY(tin)
REFERENCES owner(tin) ON DELETE CASCADE;

ALTER TABLE rental
ADD CONSTRAINT fk_1rental_apartment
FOREIGN KEY(apa_id)
REFERENCES apartment(apa_id) ON DELETE CASCADE;

ALTER TABLE rental
ADD CONSTRAINT fk_1rental_tenant
FOREIGN KEY(t_id)
REFERENCES tenant(t_id) ON DELETE CASCADE;

ALTER TABLE review
ADD CONSTRAINT fk_1review_tenant
FOREIGN KEY(t_id)
REFERENCES tenant(t_id) ON DELETE CASCADE;

ALTER TABLE review
ADD CONSTRAINT fk_1review_apartment
FOREIGN KEY(apa_id)
REFERENCES apartment(apa_id) ON DELETE CASCADE;



-- UNIQUE CONSTRAINTS


ALTER TABLE owner
ADD CONSTRAINT u_1o_email
UNIQUE (o_email);

ALTER TABLE tenant
ADD CONSTRAINT u_1t_email
UNIQUE (t_email);


-- CHECK CONSTRAINTS

-- OWNER TABLE


ALTER TABLE owner			
ADD CONSTRAINT ck_1owner_o_fname
CHECK (o_fname = UPPER(o_fname));		-- ck_1owner_o_fname


ALTER TABLE owner			
ADD CONSTRAINT ck_1owner_o_lname			-- ck_1owner_o_lname
CHECK (o_lname = UPPER(o_lname));


ALTER TABLE owner			
ADD CONSTRAINT ck_1owner_o_city			-- ck_1owner_o_city
CHECK (o_city = UPPER(o_city));


ALTER TABLE owner			
ADD CONSTRAINT ck_1owner_o_postal_code		-- ck_1owner_o_postal_code using regular expression
CHECK (regexp_like(o_postal_code, '^[0-9]{5}$'));

ALTER TABLE owner			
ADD CONSTRAINT ck_1owner_o_email			-- ck_1owner_o_email
CHECK (o_email = UPPER(o_email));


ALTER TABLE owner			
ADD CONSTRAINT ck_1owner_o_dob				-- ck_1owner_o_email
CHECK (o_dob BETWEEN '01-JAN-1922' AND '10-JAN-2004');


-- APARTMENT TABLE


ALTER TABLE apartment			
ADD CONSTRAINT ck_1apartment_apa_country			-- ck_1apartment_apa_country
CHECK (apa_country IN ('GREECE'));

ALTER TABLE apartment
ADD CONSTRAINT ck_1apartment_apa_street			-- ck_1apartment_apa_street
CHECK (apa_street = UPPER(apa_street));

ALTER TABLE apartment			
ADD CONSTRAINT ck_1apartment_apa_postal_code		-- ck_1apartment_apa_postal_code using regular expression
CHECK (regexp_like(apa_postal_code, '^[0-9]{5}$'));


ALTER TABLE apartment
ADD CONSTRAINT ck_1apartment_apa_city			-- ck_1apartment_apa_city
CHECK (apa_city = UPPER(apa_city));


ALTER TABLE apartment
ADD CONSTRAINT ck_1apartment_apa_floor			-- ck_1apartment_apa_floor
CHECK (apa_floor BETWEEN 0 AND 100);

ALTER TABLE apartment
ADD CONSTRAINT ck_1apartment_apa_price			-- ck_1apartment_apa_price
CHECK (apa_price >= 0);


-- TENANT TABLE


ALTER TABLE tenant			
ADD CONSTRAINT ck_1tenant_t_fname
CHECK (t_fname = UPPER(t_fname));		-- ck_1tenant_t_fname


ALTER TABLE tenant			
ADD CONSTRAINT ck_1tenant_t_lname		-- ck_1tenant_t_lname
CHECK (t_lname = UPPER(t_lname));


ALTER TABLE tenant			
ADD CONSTRAINT ck_1tenant_t_gender		-- ck_1tenant_t_gender
CHECK (t_gender IN ('M', 'F', 'O'));


ALTER TABLE tenant			
ADD CONSTRAINT ck_1tenant_t_country		-- ck_1tenant_t_country
CHECK (t_country = UPPER(t_country));


ALTER TABLE tenant			
ADD CONSTRAINT ck_1tenant_t_dob				-- ck_1tenant_t_dob
CHECK (t_dob BETWEEN '01-JAN-1922' AND '10-JAN-2004');


-- RENTAL TABLE

 
ALTER TABLE rental			
ADD CONSTRAINT ck_1rental_start_date			-- ck_1rental_start_date
CHECK (start_date <= end_date);

ALTER TABLE rental			
ADD CONSTRAINT ck_1rental_end_date			-- ck_1rental_end_date
CHECK (end_date >= start_date);


ALTER TABLE rental			
ADD CONSTRAINT ck_1rental_num_of_tenants			-- ck_1rental_num_of_tenants
CHECK (num_of_tenants BETWEEN 1 AND 6);


-- REVIEW TABLE

 

ALTER TABLE review			
ADD CONSTRAINT ck_1review_rating_stars			-- ck_1review_rating_stars
CHECK (rv_rating_stars BETWEEN 0 AND 5);

-- DESCRIBE TABLES

DESC OWNER
DESC APARTMENT
DESC TENANT
DESC RENTAL
DESC REVIEW

-- SHOW CONSTRAINTS (CHECKS)

select constraint_name CHECKS from user_constraints where constraint_name like 'CK_1%';

-- SHOW CONSTRAINTS (UNIQUE)

select constraint_name UNIQUE_ from user_constraints where constraint_name like 'U_1%';

-- SHOW CONSTRAINTS (PRIMARY KEYS)

select constraint_name PRIMARY_KEYS from user_constraints where constraint_name like 'PK_1%';

-- SHOW CONSTRAINTS (FOREIGN KEYS)

select constraint_name FOREIGN_KEYS from user_constraints where constraint_name like 'FK_1%';

-- SHOW SEQUENCES

select sequence_name SEQUENCES from user_sequences where sequence_name like 'SEQ%';


-- CREATE SEQUENCES

CREATE SEQUENCE seq_tin		-- sequence for pk_1owner
INCREMENT BY 1
START WITH 100000000
MAXVALUE   999999999
NOCYCLE;

CREATE SEQUENCE seq_apa_id	-- sequence for pk_1apartment
INCREMENT BY 1
START WITH 100000
MAXVALUE   999999
NOCYCLE;

CREATE SEQUENCE seq_t_id	-- sequence for pk_1tenant
INCREMENT BY 1
START WITH 100000
MAXVALUE   999999
NOCYCLE;

CREATE SEQUENCE seq_rental_id	-- sequence for pk_1rental
INCREMENT BY 1
START WITH 100000
MAXVALUE   999999
NOCYCLE;


CREATE SEQUENCE seq_review_id	-- sequence for pk_1review
INCREMENT BY 1
START WITH 100000
MAXVALUE   999999
NOCYCLE;


-- CREAT TABLES

CREATE TABLE owner(
tin		NUMBER(9) NOT NULL,				-- unique Tax Insurance Number of the owner
o_fname		VARCHAR2(30) NOT NULL,				-- owner first name max. 30 characters, upper case
o_lname		VARCHAR2(30) NOT NULL,				-- owner last name max. 30 characters, upper case
o_city		VARCHAR2(30) DEFAULT 'ATHENS',			-- owner city, where is registered
o_street	VARCHAR2(20) NOT NULL,				-- owner street name
o_street_no	NUMBER(3) NOT NULL,				-- owner street number
o_postal_code	VARCHAR2(5) NOT NULL,				-- owner greek postal code, up to 5 digits / characters
o_email		VARCHAR2(50) NOT NULL,				-- owner e-mail address, has to be unique
o_dob		DATE						-- owner date of birth
);



CREATE TABLE apartment(
apa_id		NUMBER(6) NOT NULL,				-- apartment unique id number
tin		NUMBER(9) NOT NULL,				-- fk_1apartment_owner
apa_country	VARCHAR2(10)  DEFAULT 'GREECE',			-- apartment country, GREECE
apa_street	VARCHAR2(20) NOT NULL,				-- apartment street name
apa_street_no	NUMBER(3) NOT NULL,				-- apartment street number
apa_postal_code	VARCHAR2(5) NOT NULL,				-- apartment greek postal code, up to 5 digits / characters
apa_city	VARCHAR2(30) NOT NULL,				-- apartent unique city varchar2
apa_floor	NUMBER(2) NOT NULL,				-- apartment floor: 0 for ground, 1 for 1st floor , and so on
apa_price	NUMBER(4) NOT NULL				-- apartment monthly rent, only positive values are valid, up to 4 digits
);



CREATE TABLE tenant(
t_id		NUMBER(6) NOT NULL,				-- tenant unique id number
t_fname		VARCHAR2(30) NOT NULL,				-- tenant first name max. 30 characters, upper case
t_lname		VARCHAR2(30) NOT NULL,				-- tenant last name max. 30 characters, upper case
t_gender	VARCHAR2(1) DEFAULT 'F',			-- tenant gender ('M', 'F', 'O'), default 'F'
t_email		VARCHAR2(50) NOT NULL,				-- tenant e-mail address, has to be unique
t_country	VARCHAR2(30) NOT NULL,				-- tenant country , where is registered
t_contact_num	VARCHAR2(15) NOT NULL,				-- tenant contact number (telephone) from 10 up to 15 digits
t_dob		DATE						-- tenant date of birth
);



CREATE TABLE rental(
rental_id	NUMBER(6) NOT NULL,				-- rental unique id number
apa_id		NUMBER(6) NOT NULL,				-- fk_1rental_apartment
t_id		NUMBER(6) NOT NULL,				-- fk_1rental_tenant			
start_date	DATE,						-- rental start date
end_date	DATE,  						-- rental end date
num_of_tenants	NUMBER(1) NOT NULL				-- number of tenants per rental max. 6
);				


CREATE TABLE review(
review_id	NUMBER(6) NOT NULL,				-- review unique id number
apa_id		NUMBER(6) NOT NULL,				-- fk_1review_apartment
t_id		NUMBER(6) NOT NULL,				-- fk_1review_tenant					
rv_created_date	DATE,						-- review creation date
rv_comment_in	VARCHAR2(1000) NOT NULL,			-- reviewers comments on rental
rv_rating_stars	NUMBER(1) NOT NULL				-- tenant's rating of overall stay experience,  expressed in stars
);

-- DROP CONSTRAINTS

-- FKs

--ALTER TABLE owner
--DROP CONSTRAINT fk_1owner;

ALTER TABLE apartment
DROP CONSTRAINT fk_1apartment_owner;

--ALTER TABLE apartment
--DROP CONSTRAINT fk_1apartment_review;


ALTER TABLE rental
DROP CONSTRAINT fk_1rental_apartment;

ALTER TABLE rental
DROP CONSTRAINT fk_1rental_tenant;


ALTER TABLE review
DROP CONSTRAINT fk_1review_tenant;


ALTER TABLE review
DROP CONSTRAINT fk_1review_apartment;


--UNIQUEs

ALTER TABLE owner
DROP CONSTRAINT u_1o_email;

ALTER TABLE tenant
DROP CONSTRAINT u_1t_email;

-- CHECKs
-- OWNER TABLE


ALTER TABLE owner			
DROP CONSTRAINT ck_1owner_o_fname;

ALTER TABLE owner			
DROP CONSTRAINT ck_1owner_o_lname;


ALTER TABLE owner			
DROP CONSTRAINT ck_1owner_o_city;

ALTER TABLE owner			
DROP CONSTRAINT ck_1owner_o_postal_code;

ALTER TABLE owner			
DROP CONSTRAINT ck_1owner_o_email;			



ALTER TABLE owner			
DROP CONSTRAINT ck_1owner_o_dob;

-- APARTMENT TABLE

ALTER TABLE apartment			
DROP CONSTRAINT ck_1apartment_apa_country;			


ALTER TABLE apartment
DROP CONSTRAINT ck_1apartment_apa_street;			


ALTER TABLE apartment			
DROP CONSTRAINT ck_1apartment_apa_postal_code;		



ALTER TABLE apartment
DROP CONSTRAINT ck_1apartment_apa_city;			



ALTER TABLE apartment
DROP CONSTRAINT ck_1apartment_apa_floor;		

ALTER TABLE apartment
DROP CONSTRAINT ck_1apartment_apa_price;
	
-- TENANT TABLE

ALTER TABLE tenant
DROP CONSTRAINT ck_1tenant_t_fname;	

ALTER TABLE tenant
DROP CONSTRAINT ck_1tenant_t_lname;

ALTER TABLE tenant
DROP CONSTRAINT ck_1tenant_t_gender;

ALTER TABLE tenant
DROP CONSTRAINT ck_1tenant_t_country;

ALTER TABLE tenant
DROP CONSTRAINT ck_1tenant_t_dob;

-- RENTAL TABLE

ALTER TABLE rental
DROP CONSTRAINT ck_1rental_start_date;


ALTER TABLE rental
DROP CONSTRAINT ck_1rental_end_date;

ALTER TABLE rental
DROP CONSTRAINT ck_1rental_num_of_tenants;

--REVIEW TABLE 

ALTER TABLE review
DROP CONSTRAINT ck_1review_rating_stars;

-- PKs

ALTER TABLE owner		
DROP CONSTRAINT pk_1owner;


ALTER TABLE apartment		
DROP CONSTRAINT pk_1apartment;


ALTER TABLE tenant		
DROP CONSTRAINT pk_1tenant;


ALTER TABLE rental		
DROP CONSTRAINT pk_1rental;


ALTER TABLE review		
DROP CONSTRAINT pk_1review;

-- DROP SEQUENCES

drop sequence seq_tin;

drop sequence seq_apa_id;

drop sequence seq_t_id;

drop sequence seq_rental_id;

drop sequence seq_review_id;


-- DROP TABLES

drop table apartment;

drop table owner;


drop table tenant;


drop table rental;

drop table review;



-- INSERT VALUES INTO OWNER


INSERT INTO OWNER (TIN,O_FNAME,O_LNAME,O_CITY,O_STREET,O_STREET_NO,O_POSTAL_CODE,O_EMAIL,O_DOB) 
VALUES(SEQ_TIN.NEXTVAL,'JOHN','PARK','LONDON','SAINT PETER',6,'12345','JOHNPARK@MAIL.COM','01-JAN-1984');

INSERT INTO OWNER (TIN,O_FNAME,O_LNAME,O_CITY,O_STREET,O_STREET_NO,O_POSTAL_CODE,O_EMAIL,O_DOB) 
VALUES(SEQ_TIN.NEXTVAL,'ELENA','MARKETOU','ATHENS','KARAMANLI',5,'54321','ELENAMARKOU@MAIL.COM','02-FEB-1964');

INSERT INTO OWNER (TIN,O_FNAME,O_LNAME,O_CITY,O_STREET,O_STREET_NO,O_POSTAL_CODE,O_EMAIL,O_DOB) 
VALUES(SEQ_TIN.NEXTVAL,'PARIS','ASVESTAS','THESSALONIKI','ERMOU',12,'67890','PARISASVESTAS@MAIL.COM','03-FEB-1974');

INSERT INTO OWNER (TIN,O_FNAME,O_LNAME,O_CITY,O_STREET,O_STREET_NO,O_POSTAL_CODE,O_EMAIL,O_DOB) 
VALUES(SEQ_TIN.NEXTVAL,'VAGGELIS','KOUDAS','THESSALONIKI','VENIZELOU',32,'89012','VAGGELISKOUDAS@MAIL.COM','03-MAR-1974');

INSERT INTO OWNER (TIN,O_FNAME,O_LNAME,O_CITY,O_STREET,O_STREET_NO,O_POSTAL_CODE,O_EMAIL,O_DOB) 
VALUES(SEQ_TIN.NEXTVAL,'LIZA','PANAYOTIDOU','VEROIA','KOLOKOTRONI',45,'21089','LIZAPANAYOTIDOU@MAIL.COM','15-JUN-1990');

COMMIT;


-- INSERT INTO TENANT


INSERT INTO TENANT (T_ID, T_FNAME, T_LNAME, T_GENDER, T_EMAIL, T_COUNTRY, T_CONTACT_NUM, T_DOB) 
VALUES(SEQ_T_ID.NEXTVAL,'JACOB' ,'ABRAAMOVICH', 'M', 'JACOBABRAMOVICH@MAIL.COM', 'POLAND','012345678901234', '03-MAR-1974');


INSERT INTO TENANT (T_ID, T_FNAME, T_LNAME, T_GENDER, T_EMAIL, T_COUNTRY, T_CONTACT_NUM, T_DOB) 
VALUES(SEQ_T_ID.NEXTVAL,'SCARLETT' ,'JOHANSSON', 'F', 'SCARLETTJOHANSSON@MAIL.COM', 'USA','890123401234567', '22-NOV-1984');


INSERT INTO TENANT (T_ID, T_FNAME, T_LNAME, T_GENDER, T_EMAIL, T_COUNTRY, T_CONTACT_NUM, T_DOB) 
VALUES(SEQ_T_ID.NEXTVAL,'ISAAC' ,'NEWTON', 'M', 'ISAACNEWTON@MAIL.COM', 'UK','012340123456789', '25-DEC-1964');


INSERT INTO TENANT (T_ID, T_FNAME, T_LNAME, T_GENDER, T_EMAIL, T_COUNTRY, T_CONTACT_NUM, T_DOB) 
VALUES(SEQ_T_ID.NEXTVAL,'ROBERT' ,'FROST', 'M', 'ROBERTFROST@MAIL.COM', 'USA','201340123456789', '26-MAR-1969');


INSERT INTO TENANT (T_ID, T_FNAME, T_LNAME, T_GENDER, T_EMAIL, T_COUNTRY, T_CONTACT_NUM, T_DOB) 
VALUES(SEQ_T_ID.NEXTVAL,'NIELS' ,'BOHR', 'M', 'NIELSBOHR@MAIL.COM', 'DENMARK','401230123456789', '07-OCT-1985');


INSERT INTO TENANT (T_ID, T_FNAME, T_LNAME, T_GENDER, T_EMAIL, T_COUNTRY, T_CONTACT_NUM, T_DOB) 
VALUES(SEQ_T_ID.NEXTVAL,'LUIS' ,'DE FUNES', 'M', 'LUISDEFUNES@MAIL.COM', 'FRANCE','340120123456789', '31-JUL-1945');

INSERT INTO TENANT (T_ID, T_FNAME, T_LNAME, T_GENDER, T_EMAIL, T_COUNTRY, T_CONTACT_NUM, T_DOB) 
VALUES(SEQ_T_ID.NEXTVAL,'MARLENE' ,'DIETRICH', 'F', 'MARLENEDIETRICH@MAIL.COM', 'GERMANY','340120123456789', '27-DEC-1991');


INSERT INTO TENANT (T_ID, T_FNAME, T_LNAME, T_GENDER, T_EMAIL, T_COUNTRY, T_CONTACT_NUM, T_DOB) 
VALUES(SEQ_T_ID.NEXTVAL,'MARGARETE' ,'THATCHER', 'F', 'MARGARETETHATCHER@MAIL.COM', 'UK','340120123467895', '13-OCT-1950');


INSERT INTO TENANT (T_ID, T_FNAME, T_LNAME, T_GENDER, T_EMAIL, T_COUNTRY, T_CONTACT_NUM, T_DOB) 
VALUES(SEQ_T_ID.NEXTVAL,'VLADIMIR' ,'PUTIN', 'M', 'VLADIMIRPUTIN@MAIL.COM', 'RUSSIA','034120123467895', '07-OCT-1952');


INSERT INTO TENANT (T_ID, T_FNAME, T_LNAME, T_GENDER, T_EMAIL, T_COUNTRY, T_CONTACT_NUM, T_DOB) 
VALUES(SEQ_T_ID.NEXTVAL,'YURI' ,'GAGARIN', 'M', 'YURIGAGARIN@MAIL.COM', 'RUSSIA','034120123468957', '09-MAR-1990');


INSERT INTO TENANT (T_ID, T_FNAME, T_LNAME, T_GENDER, T_EMAIL, T_COUNTRY, T_CONTACT_NUM, T_DOB) 
VALUES(SEQ_T_ID.NEXTVAL,'MARIE' ,'CURIE', 'F', 'MARIECURIE@MAIL.COM', 'FRANCE','123034120468957', '07-NOV-1975');


INSERT INTO TENANT (T_ID, T_FNAME, T_LNAME, T_GENDER, T_EMAIL, T_COUNTRY, T_CONTACT_NUM, T_DOB) 
VALUES(SEQ_T_ID.NEXTVAL,'NIKOLAY' ,'BASOV', 'M', 'NIKOLAYBASOV@MAIL.COM', 'RUSSIA','034120123465789', '14-DEC-1945');

COMMIT;

-- INSERT INTO APARTMENT


INSERT INTO APARTMENT (APA_ID, TIN, APA_COUNTRY, APA_STREET, APA_STREET_NO, APA_POSTAL_CODE, APA_CITY, APA_FLOOR, APA_PRICE) 
VALUES(SEQ_APA_ID.NEXTVAL, 100000000,'GREECE', 'VENIZELOU', 34, '54473','THESSALONIKI', 6, 450);


INSERT INTO APARTMENT (APA_ID, TIN, APA_COUNTRY, APA_STREET, APA_STREET_NO, APA_POSTAL_CODE, APA_CITY, APA_FLOOR, APA_PRICE) 
VALUES(SEQ_APA_ID.NEXTVAL, 100000000,'GREECE', 'ERMOU', 56, '54473','THESSALONIKI', 7, 500);


INSERT INTO APARTMENT (APA_ID, TIN, APA_COUNTRY, APA_STREET, APA_STREET_NO, APA_POSTAL_CODE, APA_CITY, APA_FLOOR, APA_PRICE) 
VALUES(SEQ_APA_ID.NEXTVAL, 100000001,'GREECE', 'L.POSEIDONOS', 123, '14567','MOSHATO', 5, 1200);


INSERT INTO APARTMENT (APA_ID, TIN, APA_COUNTRY, APA_STREET, APA_STREET_NO, APA_POSTAL_CODE, APA_CITY, APA_FLOOR, APA_PRICE) 
VALUES(SEQ_APA_ID.NEXTVAL, 100000001,'GREECE', 'KALLIROIS', 50, '15673','ATHENS', 4, 1000);


INSERT INTO APARTMENT (APA_ID, TIN, APA_COUNTRY, APA_STREET, APA_STREET_NO, APA_POSTAL_CODE, APA_CITY, APA_FLOOR, APA_PRICE) 
VALUES(SEQ_APA_ID.NEXTVAL, 100000001,'GREECE', 'DIKAIOSINIS', 74, '71000','IRAKLEIO', 3, 470);


INSERT INTO APARTMENT (APA_ID, TIN, APA_COUNTRY, APA_STREET, APA_STREET_NO, APA_POSTAL_CODE, APA_CITY, APA_FLOOR, APA_PRICE) 
VALUES(SEQ_APA_ID.NEXTVAL, 100000002,'GREECE', '18TH OCTOBER', 20, '64000','THASSOS', 2, 380);


INSERT INTO APARTMENT (APA_ID, TIN, APA_COUNTRY, APA_STREET, APA_STREET_NO, APA_POSTAL_CODE, APA_CITY, APA_FLOOR, APA_PRICE) 
VALUES(SEQ_APA_ID.NEXTVAL, 100000003,'GREECE', 'IROON POLUTEXNEIOU', 100, '26440','PATRA', 3, 430);


INSERT INTO APARTMENT (APA_ID, TIN, APA_COUNTRY, APA_STREET, APA_STREET_NO, APA_POSTAL_CODE, APA_CITY, APA_FLOOR, APA_PRICE) 
VALUES(SEQ_APA_ID.NEXTVAL, 100000004,'GREECE', 'MITROPOLEOS', 24, '59100','VEROIA', 4, 450);

COMMIT;

-- INSERT INTO RENTAL


INSERT INTO RENTAL (RENTAL_ID, APA_ID, T_ID, START_DATE, END_DATE, NUM_OF_TENANTS) 				-- 'VENIZELOU', 34, '54473','THESSALONIKI' ABRAAMOVICH
VALUES(SEQ_RENTAL_ID.NEXTVAL, 100000, 100000, '01-AUG-2020', '15-AUG-2020', 2);


INSERT INTO RENTAL (RENTAL_ID, APA_ID, T_ID, START_DATE, END_DATE, NUM_OF_TENANTS) 				-- 'VENIZELOU', 34, '54473','THESSALONIKI' JOHANSON
VALUES(SEQ_RENTAL_ID.NEXTVAL, 100000, 100001, '05-JUN-2020', '18-JUN-2020', 4);


INSERT INTO RENTAL (RENTAL_ID, APA_ID, T_ID, START_DATE, END_DATE, NUM_OF_TENANTS) 				-- 'ERMOU', 56, '54473','THESSALONIKI' NEWTON
VALUES(SEQ_RENTAL_ID.NEXTVAL, 100001, 100002, '07-JUL-2021', '25-JUL-2021', 3);


INSERT INTO RENTAL (RENTAL_ID, APA_ID, T_ID, START_DATE, END_DATE, NUM_OF_TENANTS) 				-- 'ERMOU', 56, '54473','THESSALONIKI' FROST
VALUES(SEQ_RENTAL_ID.NEXTVAL, 100001, 100003, '07-AUG-2021', '24-AUG-2021', 2);


INSERT INTO RENTAL (RENTAL_ID, APA_ID, T_ID, START_DATE, END_DATE, NUM_OF_TENANTS) 				-- 'L.POSEIDONOS', 123, '14567','MOSHATO' BOHR
VALUES(SEQ_RENTAL_ID.NEXTVAL, 100002, 100004, '20-AUG-2022', '30-AUG-2022', 1);


INSERT INTO RENTAL (RENTAL_ID, APA_ID, T_ID, START_DATE, END_DATE, NUM_OF_TENANTS) 				-- 'L.POSEIDONOS', 123, '14567','MOSHATO' DE FUNES
VALUES(SEQ_RENTAL_ID.NEXTVAL, 100002, 100005, '14-DEC-2021', '28-DEC-2021', 2);


INSERT INTO RENTAL (RENTAL_ID, APA_ID, T_ID, START_DATE, END_DATE, NUM_OF_TENANTS) 				-- 'KALLIROIS', 50, '15673','ATHENS' DIETRICH
VALUES(SEQ_RENTAL_ID.NEXTVAL, 100003, 100006, '13-AUG-2020', '23-AUG-2020', 2);


INSERT INTO RENTAL (RENTAL_ID, APA_ID, T_ID, START_DATE, END_DATE, NUM_OF_TENANTS) 				-- 'KALLIROIS', 50, '15673','ATHENS' THATCHER
VALUES(SEQ_RENTAL_ID.NEXTVAL, 100003, 100007, '07-DEC-2020', '13-DEC-2020', 2);


INSERT INTO RENTAL (RENTAL_ID, APA_ID, T_ID, START_DATE, END_DATE, NUM_OF_TENANTS) 				-- 'DIKAIOSINIS', 74, '71000','IRAKLEIO' PUTIN
VALUES(SEQ_RENTAL_ID.NEXTVAL, 100004, 100008, '18-FEB-2021', '23-FEB-2021', 4);


INSERT INTO RENTAL (RENTAL_ID, APA_ID, T_ID, START_DATE, END_DATE, NUM_OF_TENANTS) 				-- '18_OCTOBER', 20, '64000','THASSOS' GAGARIN
VALUES(SEQ_RENTAL_ID.NEXTVAL, 100005, 100009, '03-MAR-2022', '14-MAR-2022', 3);


INSERT INTO RENTAL (RENTAL_ID, APA_ID, T_ID, START_DATE, END_DATE, NUM_OF_TENANTS) 				-- 'IROON_POLUTEXNEIOU', 100, '26440','PATRA' CURIE
VALUES(SEQ_RENTAL_ID.NEXTVAL, 100006, 100010, '06-AUG-2022', '17-AUG-2022', 3);


INSERT INTO RENTAL (RENTAL_ID, APA_ID, T_ID, START_DATE, END_DATE, NUM_OF_TENANTS) 				-- 'VENIZELOU', 34, '54473','THESSALONIKI' PUTIN
VALUES(SEQ_RENTAL_ID.NEXTVAL, 100000, 100008, '05-AUG-2021', '15-AUG-2021', 2);

COMMIT;

-- INSERT INTO REVIEW

INSERT INTO REVIEW (REVIEW_ID, APA_ID, T_ID, RV_CREATED_DATE, RV_COMMENT_IN, RV_RATING_STARS) 				-- 'VENIZELOU', 34, '54473','THESSALONIKI' ABRAAMOVICH
VALUES(SEQ_REVIEW_ID.NEXTVAL, 100000, 100000, '16-AUG-2020', 'BEST STAY EVER', 5);


INSERT INTO REVIEW (REVIEW_ID, APA_ID, T_ID, RV_CREATED_DATE, RV_COMMENT_IN, RV_RATING_STARS) 				-- 'VENIZELOU', 34, '54473','THESSALONIKI' JOHANSON
VALUES(SEQ_REVIEW_ID.NEXTVAL, 100000, 100001, '19-JUN-2020', 'VERY GOOD', 3);


INSERT INTO REVIEW (REVIEW_ID, APA_ID, T_ID, RV_CREATED_DATE, RV_COMMENT_IN, RV_RATING_STARS) 				-- 'ERMOU', 56, '54473','THESSALONIKI' NEWTON
VALUES(SEQ_REVIEW_ID.NEXTVAL, 100001, 100002, '26-JUL-2021', 'VERY GOOD', 4);


INSERT INTO REVIEW (REVIEW_ID, APA_ID, T_ID, RV_CREATED_DATE, RV_COMMENT_IN, RV_RATING_STARS) 				-- 'ERMOU', 56, '54473','THESSALONIKI' FROST
VALUES(SEQ_REVIEW_ID.NEXTVAL, 100001, 100003, '25-AUG-2021', 'VERY GOOD', 4);


INSERT INTO REVIEW (REVIEW_ID, APA_ID, T_ID, RV_CREATED_DATE, RV_COMMENT_IN, RV_RATING_STARS) 				-- 'L.POSEIDONOS', 123, '14567','MOSHATO' BOHR
VALUES(SEQ_REVIEW_ID.NEXTVAL, 100002, 100004, '31-AUG-2022', 'BAD', 1);


INSERT INTO REVIEW (REVIEW_ID, APA_ID, T_ID, RV_CREATED_DATE, RV_COMMENT_IN, RV_RATING_STARS) 				-- 'L.POSEIDONOS', 123, '14567','MOSHATO' DE FUNES
VALUES(SEQ_REVIEW_ID.NEXTVAL, 100002, 100005, '29-DEC-2021', 'EXPECTED BETTER EXPERIENCE', 2);


INSERT INTO REVIEW (REVIEW_ID, APA_ID, T_ID, RV_CREATED_DATE, RV_COMMENT_IN, RV_RATING_STARS) 				-- 'KALLIROIS', 50, '15673','ATHENS' DIETRICH
VALUES(SEQ_REVIEW_ID.NEXTVAL, 100003, 100006, '24-AUG-2020', 'NICE', 3);


INSERT INTO REVIEW (REVIEW_ID, APA_ID, T_ID, RV_CREATED_DATE, RV_COMMENT_IN, RV_RATING_STARS) 				-- 'KALLIROIS', 50, '15673','ATHENS' THATCHER
VALUES(SEQ_REVIEW_ID.NEXTVAL, 100003, 100007, '14-DEC-2020', 'NICE', 3);


INSERT INTO REVIEW (REVIEW_ID, APA_ID, T_ID, RV_CREATED_DATE, RV_COMMENT_IN, RV_RATING_STARS) 				-- 'DIKAIOSINIS', 74, '71000','IRAKLEIO' PUTIN
VALUES(SEQ_REVIEW_ID.NEXTVAL, 100004, 100008, '24-FEB-2021', 'MEDIUM', 3);


INSERT INTO REVIEW (REVIEW_ID, APA_ID, T_ID, RV_CREATED_DATE, RV_COMMENT_IN, RV_RATING_STARS) 				-- '18_OCTOBER', 20, '64000','THASSOS' GAGARIN
VALUES(SEQ_REVIEW_ID.NEXTVAL, 100005, 100009, '15-MAR-2022', 'CONVENIENT', 4);



INSERT INTO REVIEW (REVIEW_ID, APA_ID, T_ID, RV_CREATED_DATE, RV_COMMENT_IN, RV_RATING_STARS) 				-- 'IROON_POLUTEXNEIOU', 100, '26440','PATRA' CURIE
VALUES(SEQ_REVIEW_ID.NEXTVAL, 100006, 100010, '18-AUG-2022', 'EXCELLENT', 5);


INSERT INTO REVIEW (REVIEW_ID, APA_ID, T_ID, RV_CREATED_DATE, RV_COMMENT_IN, RV_RATING_STARS) 				-- 'VENIZELOU', 34, '54473','THESSALONIKI' PUTIN
VALUES(SEQ_REVIEW_ID.NEXTVAL, 100007, 100008, '16-AUG-2021', 'VERY GOOD', 4);


COMMIT;



-- SHOW ALL DATA FROM TABLES

SELECT * FROM OWNER;
SELECT * FROM TENANT;
SELECT * FROM APARTMENT;
SELECT * FROM RENTAL;
SELECT * FROM REVIEW;

-- QUERY


-- A. ALL THE RECORDS FROM ONE TABLE (TENANT):

	SELECT * FROM TENANT;

-- B. A PROJECTION WITH 3 COLUMNS, DATA RETURNED SORTED IN REVERSE ALPHABETICAL ORDER

	SELECT T_FNAME, T_LNAME, T_COUNTRY FROM TENANT ORDER BY T_COUNTRY DESC;

-- C. RESTRICTION QUERIES WITH MULTIPLE CLAUSES DEMONSTRATING THE FOLLOWING
	-- E.G. THE TENANTS FROM A SPECIFIC COUNTRY

	SELECT * FROM TENANT WHERE T_COUNTRY = 'USA'; 

	-- A CONDITION MATCHING A PATTERN E.G. BEGINS WITH J, ENDS WITH SON.
	
	SELECT T_LNAME FROM TENANT WHERE T_LNAME LIKE 'J%SON'; 	

 	-- A NEGATIVE CONDITION PREDICATE: TENANTS NOT FROM GERMANY

	SELECT * FROM TENANT WHERE T_COUNTRY NOT IN ('GERMANY');
 	
	-- A DATE RANGE CONDITION E.G. LAST YEAR APRIL - SEPTEMBER -- RENTAL TABLE START_DATE)

	SELECT * FROM RENTAL WHERE START_DATE BETWEEN '01-APR-2021' AND '30-SEP-2021';

-- D. JOIN QUERIES WITH DATA FROM 
	-- 2 TABLES, RESULT SET WITH INFO FROM (2) TABLES 'OWNER' & 'APARTMENT'

 	SELECT O.O_FNAME, O.O_LNAME, A.APA_CITY FROM OWNER O JOIN APARTMENT A ON A.TIN = O.TIN; 

	-- 3 TABLES, RESULT SET WITH INFO FROM (3) TABLES 'OWNER', 'APARTMENT', 'RENTAL'.
 	SELECT O.O_FNAME, O.O_LNAME, A.APA_CITY, START_DATE, END_DATE FROM OWNER O JOIN APARTMENT A ON A.TIN = O.TIN JOIN RENTAL R ON R.APA_ID = A.APA_ID; 

	-- MORE TABLES, RESULT SET WITH INFO FROM (4) TABLES 'OWNER', 'APARTMENT', 'RENTAL', 'TENANT'
 
	SELECT O.O_FNAME OWNER_NAME, O.O_LNAME OWNER_SURNAME, A.APA_CITY APARTMENT_CITY, START_DATE, END_DATE, T_FNAME TENANT_NAME, T_LNAME TENANT_SURNAME FROM OWNER O JOIN APARTMENT A ON A.TIN = O.TIN JOIN RENTAL R ON R.APA_ID = A.APA_ID JOIN TENANT T ON T.T_ID = R.T_ID; 

-- E. AGGREGATE FUNCTIONS
	-- 1. SHOW THE TENANTS WHOSE SURNAME STARTS WITH A AND ENDS WITH H (WE MISSED TO INSERT TENANT WITH LAST NAME ENDING WITH S).
	
	SELECT T_LNAME, T_FNAME FROM TENANT WHERE T_LNAME LIKE 'A%H';

	-- 2. SHOW THE TOTAL NUMBER OF TENANTS PER COUNTRY.

	SELECT T_COUNTRY,  COUNT(DISTINCT T_LNAME) FROM TENANT GROUP BY T_COUNTRY;

	-- 3. WHICH APARTMENT WAS THE MOST POPULAR (WAS RENTED THE MOST TIMES)? 
	
	SELECT APA_ID,  COUNT(APA_ID) TOTAL_RENTS FROM RENTAL GROUP BY APA_ID ORDER BY TOTAL_RENTS DESC FETCH FIRST 1 ROWS ONLY;

	-- 4. SHOW THE OWNERS (SURNAME, NAME AND TIN) IN AN ASCENDING ORDER AND THE APARTMENTS THEY OWN. 

	SELECT O_LNAME SURNAME, O_FNAME NAME, OWNER.TIN, APA_ID  FROM OWNER, APARTMENT WHERE OWNER.TIN = APARTMENT.TIN ORDER BY SURNAME ASC;

	-- 5. WHICH OWNER (SURNAME, NAME AND TIN) HAS THE MOST APARTMENTS.
 


 	-- 6. IN WHICH CITY YOU CAN FIND THE MOST EXPENSIVE APARTMENT?
 
	 SELECT APA_CITY, APA_PRICE FROM APARTMENT ORDER BY APA_PRICE DESC FETCH FIRST 1 ROWS ONLY;

	-- 7. HOW MANY REVIEWS WERE WRITTEN IN 2020? 

	SELECT COUNT(REVIEW_ID) FROM REVIEW WHERE RV_CREATED_DATE BETWEEN '01-JAN-2020' AND '31-DEC-2020';

	-- 8. WHICH TENANT (SURNAME AND NAME) HAS LEFT THE MOST REVIEWS? 
	
	SELECT T_LNAME,T_FNAME, COUNT(T_LNAME) FROM TENANT T, REVIEW R WHERE T.T_ID = R.T_ID GROUP BY T_LNAME, T_FNAME
								 ORDER BY COUNT(T_LNAME) DESC FETCH FIRST 1 ROWS ONLY;

	-- 9. SHOW THE APARTMENTS THAT WERE RENTED IN AUGUST (REGARDLESS OF THE YEAR). 
	
	SELECT R.APA_ID, APA_STREET, APA_STREET_NO, APA_CITY FROM APARTMENT A, RENTAL R WHERE A.APA_ID = R.APA_ID AND TO_CHAR(START_DATE, 'MON') = 'AUG';

	-- 10. HOW MANY APARTMENTS THAT HAVEN’T BEEN RENTED EXIST? 

	SELECT COUNT(*) FROM APARTMENT A LEFT JOIN RENTAL R ON A.APA_ID = R.APA_ID WHERE START_DATE IS NULL;
	
	-- 11. SHOW THE OLDEST FEMALE TENANT 

	SELECT T_FNAME, T_LNAME FROM TENANT WHERE T_GENDER IN ('F') ORDER BY (SYSDATE-T_DOB) DESC FETCH FIRST 1 ROWS ONLY;

	-- 12. SHOW THE OWNERS THAT NONE OF THEIR APARTMENTS WERE RENTED. 

	SELECT O_LNAME, O_FNAME, A.APA_ID FROM OWNER O LEFT JOIN APARTMENT A ON O.TIN = A.TIN LEFT JOIN RENTAL R ON R.APA_ID = A.APA_ID WHERE R.RENTAL_ID IS NULL;
	
	-- 13. WHICH TENANTS RENTED AN APARTMENT THAT ITS STREET ADDRESS HAS THE WORD “IROON” IN IT? 
	SELECT T_FNAME, T_LNAME FROM TENANT JOIN RENTAL R ON TENANT.T_ID = R.T_ID JOIN APARTMENT A ON A.APA_ID = R.APA_ID WHERE A.APA_STREET LIKE '%IROON%';

 	-- 14. SHOW THE APARTMENTS IN DESCENDING ORDER, BASED ON THE AVERAGE OF THEIR REVIEW SCORES.
	SELECT A.APA_ID, A.APA_CITY, A.APA_STREET, AVG(R.RV_RATING_STARS) FROM APARTMENT A JOIN REVIEW R ON A.APA_ID = R.APA_ID 
		GROUP BY A.APA_ID, A.APA_CITY, A.APA_STREET ORDER BY AVG(R.RV_RATING_STARS) DESC; 

	-- 15. WHICH APARTMENT IN “THESSALONIKI” HAS THE HIGHEST REVIEW AVERAGE? 

	SELECT A.APA_ID, A.APA_CITY, A.APA_STREET, AVG(R.RV_RATING_STARS) FROM APARTMENT A JOIN REVIEW R ON A.APA_ID = R.APA_ID 
		GROUP BY A.APA_ID, A.APA_CITY, A.APA_STREET HAVING A.APA_CITY IN ('THESSALONIKI') 
						ORDER BY AVG(R.RV_RATING_STARS) DESC FETCH FIRST 1 ROWS ONLY;


	-- 16. WHICH TENANT HAS RENTED THE MOST APARTMENTS? 
	SELECT T_FNAME, T_LNAME, COUNT(RENTAL_ID) FROM TENANT T JOIN RENTAL R ON T.T_ID = R.T_ID JOIN APARTMENT A ON A.APA_ID = R.APA_ID 
									GROUP BY T_FNAME, T_LNAME ORDER BY COUNT(RENTAL_ID) DESC FETCH FIRST 1 ROWS ONLY;

	-- 17. SHOW THE AVERAGE SCORE OF THE APARTMENT REVIEWS MADE BY FEMALE AND MALE TENANTS. 

	SELECT T_GENDER, AVG(RV_RATING_STARS) FROM TENANT T JOIN REVIEW R ON T.T_ID = R.T_ID GROUP BY T_GENDER;

	-- 18. SHOW THE MOST POPULAR CITY (THE CITY THAT ITS APARTMENTS WERE RENTED THE MOST TIMES) PER GENDER 
	SELECT A.APA_CITY, T.T_GENDER,  COUNT(A.APA_CITY) FROM TENANT T JOIN RENTAL R ON T.T_ID = R.T_ID JOIN APARTMENT A ON A.APA_ID  = R.APA_ID GROUP BY A.APA_CITY, T.T_GENDER;

	-- 19. ASSUME A USERNAME FOR THE TENANTS IS MADE UP OF THE FIRST 4 LETTERS OF THE FIRST NAME ADDED TO THE FIRST 4 LETTERS OF THE SURNAME. WRITE THE QUERY TO CREATE IT AND SHOW THE USERNAME FOR EACH USER. DO NOT ATTEMPT TO INPUT IT IN THE TENANTS TABLE. 

	SELECT T_FNAME, T_LNAME, SUBSTR(T_FNAME, 1,4) || SUBSTR(T_LNAME, 1,4) USERNAME  FROM TENANT;


	SELECT SUM(((END_DATE - START_DATE) / 30) * APA_PRICE) TOTAL_REVENUE FROM APARTMENT A JOIN RENTAL R ON A.APA_ID = R.APA_ID;




